@page "/photos"
@inject IMarsRoverPhoto _marsRoverPhoto;
@inject IJSRuntime JSruntime;

<PageTitle>Rover Photos</PageTitle>

<!-- Search Filter -->
<div filter>
    <select @onchange=@OnRoverChange>
        <option value="curiosity">Curiosity</option>
        <option value="opportunity">Opportunity</option>
        <option value="spirit">Spirit</option>
    </select>

    <select @onchange=@OnCameraChange>
        <option value="all">All</option>
        @if(manifest != null)
        {
            @foreach(var cam in manifest.Rover.Cameras)
            {
                <option value=@cam.Name>@cam.Full_name</option>
            }
        }
    </select>

    <label for="solNumber">Sol</label>
    <input @onchange=@OnSolChange placeholder="1" type="number" id="solNumber" name="sol" min="1" />
</div>

<!-- Mission Manifest -->
@if(manifest != null)
{
    <Manifest manifest=@manifest></Manifest>
}

<!-- Photos -->
<section photos>
@if (response != null)
{
    @if(response.Photos.Length == 0)
    {
        <h1>No images</h1>
    }
    @foreach (var item in response.Photos)
    {
        <img src=@item.Img_src />
    }
}
</section>

@code {
    MarsRoverPhoto.Response? response;
    MarsRoverPhoto.Params urlParams;
    MarsRoverManifest.Response manifest;


    protected override async Task OnInitializedAsync()
    {
        urlParams = new MarsRoverPhoto.Params();
        response = await _marsRoverPhoto.GetRoverPhotos(urlParams);
        manifest = await _marsRoverPhoto.GetMarsRoverManifest(urlParams.RoverName);
    }

    private async Task OnRoverChange(ChangeEventArgs e)
    {
        string val = e.Value.ToString();
        urlParams.RoverName = val;
        response = await _marsRoverPhoto.GetRoverPhotos(urlParams);
        manifest = await _marsRoverPhoto.GetMarsRoverManifest(urlParams.RoverName);
    }

    private async Task OnSolChange(ChangeEventArgs e)
    {
        string val = e.Value.ToString();
        urlParams.Sol = val == "0" ? null : $"&sol={val}";
        response = await _marsRoverPhoto.GetRoverPhotos(urlParams);
    }

    private async Task OnCameraChange(ChangeEventArgs e)
    {
        string val = e.Value.ToString();
        urlParams.Camera = val == "all" ? null : $"&camera={val}";
        response = await _marsRoverPhoto.GetRoverPhotos(urlParams);
    }
}

